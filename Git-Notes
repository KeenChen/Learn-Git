一、创建版本库：
第一步：找到位置创建空目录：
$cd 目录
$ mkdir learngit
$ cd learngit   //进入当前目录
$ pwd  //显示当前目录

第二步：通过git init命令把这个目录变成Git可以管理的仓库（初始化仓库）：
$ git init

添加文件只需两步（commit可以一次提交很多文件，所以你可以多次add不同的文件）
第一步：用命令git add告诉Git，把文件添加到仓库（先在learngit根目录下创建一个readme.txt文件）：
$ git add readme.txt

第二步：用命令git commit告诉Git，把文件提交到仓库：
$ git commit -m "wrote a readme file"  //-m后面输入的是本次提交的说明，可以输入任意内容，当然最好是有意义的，这样你就能从历史记录里方便地找到改动记录。


二-1、时间穿梭-版本回退：
git status             --掌握工作区的状态（文件是否被修改过）
git diff               --参看修改内容
git log                --显示从最近到最远的提交日志，查看提交历史，一遍确定要回退到哪个版本      //加上--pretty=oneline 使输出信息内容变简介
git reflog             --查看命令历史，以便确定要回到未来的哪个版本
git reset --hard HEAD^ --把readme.txt回退到上一个版本   //HEAD表示当前版本,上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100


二-2、时光穿梭--工作区和暂存区：

把文件往Git版本库里添加的时候，是分两步执行的：

第一步是用git add把文件添加进去，实际上就是把文件修改添加到暂存区；

第二步是用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。

因为我们创建Git版本库时，Git自动为我们创建了唯一一个master分支，所以，现在，git commit就是往master分支上提交更改。
